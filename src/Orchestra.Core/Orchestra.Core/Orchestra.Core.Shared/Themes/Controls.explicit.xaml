<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:orc="http://www.wildgums.net.au/orc">

    <Geometry x:Key="StopGeometry">M18,18H6V6H18V18Z</Geometry>
    <Geometry x:Key="ExclamationGeometry">M11,4.5H13V15.5H11V4.5M13,17.5V19.5H11V17.5H13Z</Geometry>
    <Geometry x:Key="ErrorGeometry">M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z</Geometry>
    <Geometry x:Key="WarningGeometry">M2,21.9997L12,2.00026L20.6247,19.2199L20.6291,19.2199L22,21.9997L22,21.9997L22,21.9997L2,21.9997ZM5.0287,19.9997L18.9638,19.9997L12,6.11526L5.0287,19.9997ZM12.9376,16.5456L11.2947,16.5456L11.2947,18.2081L12.9376,18.2081L12.9376,16.5456ZM12.9376,11.5581L11.2947,11.5581L11.2947,14.8831L12.9376,14.8831L12.9376,11.5581Z</Geometry>
    <Geometry x:Key="InfoGeometry">M11,9L13,9L13,7L11,7M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.51416,2 2,6.51416 2,12C2,17.4858 6.51416,22 12,22C17.4858,22 22,17.4858 22,12C22,6.51416 17.4858,2 12,2M11,17L13,17L13,11L11,11L11,17Z</Geometry>
    <Geometry x:Key="QuestionGeometry">M10,19H13V22H10V19M12,2C17.35,2.22 19.68,7.62 16.5,11.67C15.67,12.67 14.33,13.33 13.67,14.17C13,15 13,16 13,17H10C10,15.33 10,13.92 10.67,12.92C11.33,11.92 12.67,11.33 13.5,10.67C15.92,8.43 15.32,5.26 12,5A3,3 0 0,0 9,8H6A6,6 0 0,1 12,2Z</Geometry>

    <SolidColorBrush x:Key="MessageBoxStopBrush" Color="Red" />
    <SolidColorBrush x:Key="MessageBoxExclamationBrush" Color="Red" />
    <SolidColorBrush x:Key="MessageBoxErrorBrush" Color="Red" />
    <SolidColorBrush x:Key="MessageBoxWarningBrush" Color="DarkOrange" />
    <SolidColorBrush x:Key="MessageBoxInfoBrush" Color="RoyalBlue" />
    <SolidColorBrush x:Key="MessageBoxQuestionBrush" Color="RoyalBlue" />

    <Style x:Key="MessageBoxLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Margin" Value="0 10 10 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid Margin="{TemplateBinding Margin}" VerticalAlignment="Top">
                        <Viewbox x:Name="Viewbox" Height="36" Width="36">
                            <Path Data="{TemplateBinding Path.Data}" HorizontalAlignment="Center" Margin="0"
                                  SnapsToDevicePixels="True" Stretch="Fill" UseLayoutRounding="True"
                                  Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center"/>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Stop">
                            <Setter Property="BorderBrush" Value="{StaticResource MessageBoxStopBrush}" />
                            <Setter Property="Path.Data" Value="{StaticResource StopGeometry}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Exclamation">
                            <Setter Property="BorderBrush" Value="{StaticResource MessageBoxExclamationBrush}" />
                            <Setter Property="Path.Data" Value="{StaticResource ExclamationGeometry}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Error">
                            <Setter Property="BorderBrush" Value="{StaticResource MessageBoxErrorBrush}" />
                            <Setter Property="Path.Data" Value="{StaticResource ErrorGeometry}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Warning">
                            <Setter Property="BorderBrush" Value="{StaticResource MessageBoxWarningBrush}" />
                            <Setter Property="Path.Data" Value="{StaticResource WarningGeometry}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Information">
                            <Setter Property="BorderBrush" Value="{StaticResource MessageBoxInfoBrush}" />
                            <Setter Property="Path.Data" Value="{StaticResource InfoGeometry}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Question">
                            <Setter Property="BorderBrush" Value="{StaticResource MessageBoxQuestionBrush}" />
                            <Setter Property="Path.Data" Value="{StaticResource QuestionGeometry}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupBoxWithoutLine" TargetType="{x:Type GroupBox}">
        <Setter Property="Padding" Value="8 0 4 0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                            <TextBlock Padding="4 0 0 0" Background="WhiteSmoke"
                                       FontWeight="Medium" Foreground="#575757">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True"/>
                            </TextBlock>
                        </DockPanel>
                        <Border Grid.Row="1" BorderThickness="0" BorderBrush="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="FadeOutStoryboard" AutoReverse="False">
        <DoubleAnimation BeginTime="0:0:1.0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"
                         FillBehavior="Stop" />
    </Storyboard>

    <Style x:Key="LinkLabelWithAccentColorStyle" TargetType="{x:Type orc:LinkLabel}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Foreground" Value="#575757"/>
        <Setter Property="HoverForeground" Value="{StaticResource AccentColorBrush}"/>

        <Setter Property="HyperlinkStyle">
            <Setter.Value>
                <Style TargetType="Hyperlink">
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type orc:LinkLabel}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <TextBlock x:Name="PART_TextBlock" Background="{TemplateBinding Background}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   TextDecorations="{TemplateBinding TextBlock.TextDecorations}">
                            <Hyperlink x:Name="PART_InnerHyperlink" TextDecorations="None"
                                        NavigateUri="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=Url}"
                                        Style= "{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=HyperlinkStyle}"
                                        Command="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=Command}"
                                        CommandParameter="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=CommandParameter}"
                                        CommandTarget="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=CommandTarget}">
                                <orc:BindableRun BoundText="{Binding RelativeSource= {RelativeSource TemplatedParent}, Path=Content}"/>
                            </Hyperlink>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="LinkLabelBehavior" Value="NeverUnderline">
                            <Setter TargetName="PART_InnerHyperlink" Property="TextDecorations"  Value="None"/>
                        </Trigger>
                        <Trigger Property="LinkLabelBehavior" Value="AlwaysUnderline">
                            <Setter TargetName="PART_InnerHyperlink" Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="LinkLabelBehavior" Value="HoverUnderline"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_InnerHyperlink" Property="TextDecorations" Value="Underline"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="false"/>
                                <Condition Property="LinkLabelBehavior" Value="HoverUnderline"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_InnerHyperlink" Property="TextDecorations" Value="None"/>
                        </MultiTrigger>
                        <Trigger SourceName="PART_InnerHyperlink" Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LogoButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" BorderBrush="Transparent" BorderThickness="0"
                            Background="Transparent" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
